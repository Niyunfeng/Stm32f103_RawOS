


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 EXTERN           raw_task_active
    3 00000000                 EXTERN           high_ready_obj
    4 00000000         
    5 00000000                 IMPORT           raw_stack_check
    6 00000000         
    7 00000000         
    8 00000000                 EXPORT           OS_CPU_SR_Save
    9 00000000                 EXPORT           OS_CPU_SR_Restore
   10 00000000         
   11 00000000                 EXPORT           CPU_IntDis
   12 00000000                 EXPORT           CPU_IntEn
   13 00000000         
   14 00000000         
   15 00000000         
   16 00000000                 EXPORT           raw_start_first_task
   17 00000000         
   18 00000000                 EXPORT           port_task_switch
   19 00000000                 EXPORT           raw_int_switch
   20 00000000         
   21 00000000                 EXPORT           PendSV_Handler
   22 00000000         
   23 00000000         
   24 00000000         ;*******************************************************
                       *************************************************
   25 00000000         ;                                                EQUATES
                       
   26 00000000         ;*******************************************************
                       *************************************************
   27 00000000         
   28 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; Interrupt control
                                                             state register.
   29 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; System priority r
                                                            egister (priority 1
                                                            4).
   30 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSV priority v
                                                            alue (lowest).
   31 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
   32 00000000         
   33 00000000         ;*******************************************************
                       *************************************************
   34 00000000         ;                                      CODE GENERATION D
                       IRECTIVES
   35 00000000         ;*******************************************************
                       *************************************************
   36 00000000         
   37 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   38 00000000                 THUMB
   39 00000000                 REQUIRE8



ARM Macro Assembler    Page 2 


   40 00000000                 PRESERVE8
   41 00000000         
   42 00000000         OS_CPU_SR_Save
   43 00000000 F3EF 8010       MRS              R0, PRIMASK
   44 00000004 B672            CPSID            I
   45 00000006 4770            BX               LR
   46 00000008         
   47 00000008         OS_CPU_SR_Restore
   48 00000008 F380 8810       MSR              PRIMASK, R0
   49 0000000C 4770            BX               LR
   50 0000000E         
   51 0000000E         
   52 0000000E         
   53 0000000E         
   54 0000000E         
   55 0000000E         CPU_IntDis
   56 0000000E B672            CPSID            I
   57 00000010 4770            BX               LR
   58 00000012         
   59 00000012         
   60 00000012         CPU_IntEn
   61 00000012 B662            CPSIE            I
   62 00000014 4770            BX               LR
   63 00000016         
   64 00000016         raw_start_first_task
   65 00000016 481D            LDR              R0, =NVIC_SYSPRI14
   66 00000018 F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   67 0000001C 7001            STRB             R1, [R0]
   68 0000001E         
   69 0000001E 2000            MOVS             R0, #0
   70 00000020 F380 8809       MSR              PSP, R0
   71 00000024         
   72 00000024         ;align msp to 8 byte
   73 00000024 F3EF 8008       MRS              R0, MSP
   74 00000028 08C0            LSRS             R0, R0, #3
   75 0000002A 00C0            LSLS             R0, R0, #3
   76 0000002C F380 8808       MSR              MSP, R0
   77 00000030         
   78 00000030 4817            LDR              R0, =NVIC_INT_CTRL
   79 00000032 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   80 00000036 6001            STR              R1, [R0]
   81 00000038         
   82 00000038 B662            CPSIE            I
   83 0000003A         
   84 0000003A         OSStartHang
   85 0000003A E7FE            B                OSStartHang
   86 0000003C BF00            nop
   87 0000003E         
   88 0000003E         
   89 0000003E         
   90 0000003E         port_task_switch
   91 0000003E 4814            LDR              R0, =NVIC_INT_CTRL
   92 00000040 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   93 00000044 6001            STR              R1, [R0]
   94 00000046 4770            BX               LR
   95 00000048         
   96 00000048         
   97 00000048         raw_int_switch
   98 00000048 4811            LDR              R0, =NVIC_INT_CTRL



ARM Macro Assembler    Page 3 


   99 0000004A F04F 5180       LDR              R1, =NVIC_PENDSVSET
  100 0000004E 6001            STR              R1, [R0]
  101 00000050 4770            BX               LR
  102 00000052         
  103 00000052         
  104 00000052         PendSV_Handler
  105 00000052         
  106 00000052 B672            CPSID            I
  107 00000054 F3EF 8009       MRS              R0, PSP
  108 00000058 B150            CBZ              R0, OS_CPU_PendSVHandler_nosave
  109 0000005A         
  110 0000005A                 IF               {FPU} != "SoftVFP"
  112                          ENDIF
  113 0000005A         
  114 0000005A 3820            SUBS             R0, R0, #0x20
  115 0000005C E880 0FF0       STM              R0, {R4-R11}
  116 00000060         
  117 00000060 490C            LDR              R1, =raw_task_active
  118 00000062 6809            LDR              R1, [R1]
  119 00000064 6008            STR              R0, [R1]
  120 00000066         
  121 00000066 B500            PUSH             {R14}
  122 00000068 F7FF FFFE       bl               raw_stack_check
  123 0000006C F85D EB04       POP              {R14}
  124 00000070         
  125 00000070         OS_CPU_PendSVHandler_nosave
  126 00000070         
  127 00000070 4808            LDR              R0, =raw_task_active
  128 00000072 4909            LDR              R1, =high_ready_obj
  129 00000074 680A            LDR              R2, [R1]
  130 00000076 6002            STR              R2, [R0]
  131 00000078         
  132 00000078 6810            LDR              R0, [R2]
  133 0000007A E890 0FF0       LDM              R0, {R4-R11}
  134 0000007E 3020            ADDS             R0, R0, #0x20
  135 00000080         
  136 00000080                 IF               {FPU} != "SoftVFP"
  138                          ENDIF
  139 00000080         
  140 00000080 F380 8809       MSR              PSP, R0
  141 00000084 F04E 0E04       ORR              LR, LR, #0x04
  142 00000088 B662            CPSIE            I
  143 0000008A 4770            BX               LR
  144 0000008C         
  145 0000008C                 END
              E000ED22 
              E000ED04 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\cpu.d -o.\obj\cpu.o -IC:\Users\Administrator\Desktop\STM32F1
03_RawOS\prj\RTE -IC:\Users\Administrator\Desktop\STM32F103_RawOS\prj\RTE\Devic
e\STM32F103ZE -Id:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -Id:\Keil_v5\
ARM\PACK\Keil\STM32F1xx_DFP\1.1.0\Device\Include -Id:\Keil_v5\ARM\PACK\Keil\STM
32F1xx_DFP\1.1.0\Device\StdPeriph_Driver\inc --predefine="__MICROLIB SETA 1" --
predefine="__UVISION_VERSION SETA 517" --predefine="_RTE_ SETA 1" --predefine="
STM32F10X_HD SETA 1" --list=.\cpu.lst ..\src\raw-os\port\cpu.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 37 in file ..\src\raw-os\port\cpu.asm
   Uses
      None
Comment: .text unused
CPU_IntDis 0000000E

Symbol: CPU_IntDis
   Definitions
      At line 55 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 11 in file ..\src\raw-os\port\cpu.asm
Comment: CPU_IntDis used once
CPU_IntEn 00000012

Symbol: CPU_IntEn
   Definitions
      At line 60 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 12 in file ..\src\raw-os\port\cpu.asm
Comment: CPU_IntEn used once
OSStartHang 0000003A

Symbol: OSStartHang
   Definitions
      At line 84 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 85 in file ..\src\raw-os\port\cpu.asm
Comment: OSStartHang used once
OS_CPU_PendSVHandler_nosave 00000070

Symbol: OS_CPU_PendSVHandler_nosave
   Definitions
      At line 125 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 108 in file ..\src\raw-os\port\cpu.asm
Comment: OS_CPU_PendSVHandler_nosave used once
OS_CPU_SR_Restore 00000008

Symbol: OS_CPU_SR_Restore
   Definitions
      At line 47 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 9 in file ..\src\raw-os\port\cpu.asm
Comment: OS_CPU_SR_Restore used once
OS_CPU_SR_Save 00000000

Symbol: OS_CPU_SR_Save
   Definitions
      At line 42 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 8 in file ..\src\raw-os\port\cpu.asm
Comment: OS_CPU_SR_Save used once
PendSV_Handler 00000052

Symbol: PendSV_Handler



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 104 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 21 in file ..\src\raw-os\port\cpu.asm
Comment: PendSV_Handler used once
port_task_switch 0000003E

Symbol: port_task_switch
   Definitions
      At line 90 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 18 in file ..\src\raw-os\port\cpu.asm
Comment: port_task_switch used once
raw_int_switch 00000048

Symbol: raw_int_switch
   Definitions
      At line 97 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 19 in file ..\src\raw-os\port\cpu.asm
Comment: raw_int_switch used once
raw_start_first_task 00000016

Symbol: raw_start_first_task
   Definitions
      At line 64 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 16 in file ..\src\raw-os\port\cpu.asm
Comment: raw_start_first_task used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 28 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 78 in file ..\src\raw-os\port\cpu.asm
      At line 91 in file ..\src\raw-os\port\cpu.asm
      At line 98 in file ..\src\raw-os\port\cpu.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 31 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 79 in file ..\src\raw-os\port\cpu.asm
      At line 92 in file ..\src\raw-os\port\cpu.asm
      At line 99 in file ..\src\raw-os\port\cpu.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 30 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 66 in file ..\src\raw-os\port\cpu.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 29 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 65 in file ..\src\raw-os\port\cpu.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

high_ready_obj 00000000

Symbol: high_ready_obj
   Definitions
      At line 3 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 128 in file ..\src\raw-os\port\cpu.asm
Comment: high_ready_obj used once
raw_stack_check 00000000

Symbol: raw_stack_check
   Definitions
      At line 5 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 122 in file ..\src\raw-os\port\cpu.asm
Comment: raw_stack_check used once
raw_task_active 00000000

Symbol: raw_task_active
   Definitions
      At line 2 in file ..\src\raw-os\port\cpu.asm
   Uses
      At line 117 in file ..\src\raw-os\port\cpu.asm
      At line 127 in file ..\src\raw-os\port\cpu.asm

3 symbols
354 symbols in table
